############################ STATS #############################
# Use zero to record all stats from the beggining
# consider the value of property space.sc.warmup_period
stats.min_time=1	


# Negative value means no rounding for statistic values.
stats.rounding_decimal=-1	


# stats.conf_interval_z
# - "NONE":	Used for not printing confidence intervals, or "50%", "60%", "70%", "80%", "90%".
# - Other values:
#		- "default" or "95%" (default uses 95th percentile), 
#		- "98%", 
#		- "99%", 
#		- "99.9%".
stats.conf_interval_z=NONE


# stats.mean, stats.stddev
#	true to print mean, stddev, aggregated/time transient results, compress by averaging per time simulation units
stats.print.mean=true
stats.print.stddev=false
stats.print.aggregates=true
stats.print.transient=true
stats.print.transient.flush_period=100
stats.aggregates.recording_period=20


stats.outputdir=<FILES>/results


# statistics.handlers.sc: Computes Statisitcs only for a fixed SC	
statistics.handlers.fixed_sc.cmpt0=NONE
	# NONE
	# BuffUtil,
	# Price


####################### handlers to use statistics.handlers.* ######################
#	"undefined" or NONE declairs not using any
statistics.handlers.iterative.mu.cmpt1=NONE
	# NONE,
	# Connected,	
	# Disconnected,	
	# HasMoved,	
	# IsHandedover,	
	# IsReset,	
	# HasStarted


	
# Caching performance stats for all used caching methods
# TimeToConsume, 
# GAINPercent, 
# GAINPercent_Hit,
# GAINPercent_BH,
# HitsNum, 
# HITPercent, 
# GAIN_Hit,
# GAIN_BH  
# ConsumedMCPercent
statistics.performance.gains=GAINPercent, GAINPercent_Hit, GAINPercent_BH, ConsumedMCPercent, TimeToConsume

#BHNum,
# MCNumAfterDiconnFromSC, 
# MCNumAfterDiconnFromSC, 
# MCNumBeforeConn2SC, 
# MCNumWhileConn2SC 	
statistics.performance.other=NONE



# Monitoring stats of specific cells 	
statistics.handlers.fixed_sc.monitor_scs=NONE
	# check statistics.handlers.iterative.sc.cmpt4 for options
statistics.handlers.fixed_sc.cmpt0.no_model=NONE
	# check statistics.handlers.iterative.sc.cmpt4.no_model for options
statistics.handlers.fixed_sc.cmpt0=NONE

	
# statistics.handlers.iterative.sc.cmpt4.no_model: 
# Computes aggregated statisitcs for all small cells, regardless of caching model	
statistics.handlers.iterative.sc.cmpt4.no_model=ResidenceDuration, HandoverDuration#NeighborsCount, ResidenceDuration, HandoverDuration, MUsCurrConnected	
	# NeighborsCount
	# ResidenceDuration
	# HandoverDuration
	# MUsCurrConnected
		
# statistics.handlers.iterative.sc.cmpt4: 
# Computes aggregated statisitcs for all small cells per caching model
statistics.handlers.iterative.sc.cmpt4=BuffUtil, Price
	# NONE
	# BuffUtil,
	# BuffUsed
	# Price

	
# statistics.handlers.iterative.sc.cmpt5: Computes Statisitcs only for a given SC	
statistics.handlers.iterative.sc.cmpt5=ITMS_RPLCD
	# NONE
	# ITMS_NOT_CACHED_BY_PRICE	
	#					Keeps track of the number of cache replacements regarding
	# ITMS_ALREADY_CACHED	
	#					Keeps track of the number of not cached items because they were already 
	#					present in the cache at time of request.
	# ITMS_RPLCD		Keeps track of cache replacements regarding replacement-based methods
	# CNCLD				Keeps track of cached requests canceled after a mobile handoff.
	# CNCLD_PERCENT 	Keeps track of the percentage of the items canceled out of those requested 
	#					to be canceled if cached (useful if items remain cached due tobeing 
	#					requested by other mobile requestors too). 

# statistics.handlers.iterative.sc.cmpt6
#	Similar to cmpt5 stats, only these stats do not get kept for each and every caching method
#		For a full list of options, check enum WellKnownTitle in
#		statistics.handlers.iterative.sc.cmpt6.UnonymousCompute6
statistics.handlers.iterative.sc.cmpt6=NONE#GOLDEN_RATIO_A, GOLDEN_RATIO_B, GOLDEN_RATIO_C1, GOLDEN_RATIO_C2, #OVERLAP_MAXPOP_EPC, OVERLAP_MAXPOP_EPCLC, !HANDOVER_TIME, MU_HANDOFFS_ZERO,	MU_HANDOFFS,  #OVERLAP_MAXPOP_EPC, OVERLAP_MAXPOP_EPCLC
    # GOLDEN_RATIO_A
	#		Keeps track of "a" in golden ratio procedure for finding optimal time 
	#		interval t` during which no replacements of legacy cached objects <LC1, LC2, ...>   
	#		are allowed in every small cell SC when there is at least one mobile MU that is expected   
	#		to handoff in time t` to SC, and MU requests for <LC1, LC2, ...> from SC.
	#
    # GOLDEN_RATIO_B
	#		Keeps track of "b" in golden ratio procedure. See description of GOLDEN_RATIO_A for 
	#		details. 
	#
    # GOLDEN_RATIO_C1   
	#		Keeps track of "c1" in golden ratio procedure. See description of GOLDEN_RATIO_A for 
	#		details.
	#
    # GOLDEN_RATIO_C2
	#		Keeps track of "c2" in golden ratio procedure. See description of GOLDEN_RATIO_A for 
	#		details. 
	#
   	#
    # GOLDEN_RATIO_F_A
	#		The gains of EPC-LC for the golden ration time interval "a"
    # GOLDEN_RATIO_F_B
	#		The gains of EPC-LC for the golden ration time interval "b"
    # GOLDEN_RATIO_F_C1
	#		This is the final result EPC-LC, i.e., the gains of EPC-LC for the golden ration time 
	#		interval "c1".
    # GOLDEN_RATIO_F_C2
	#		The gains of EPC-LC for the golden ration time interval "c2"
